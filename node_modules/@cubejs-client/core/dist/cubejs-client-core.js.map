{"version":3,"file":"cubejs-client-core.js","sources":["../src/utils.js","../src/ResultSet.js","../src/SqlQuery.js","../src/Meta.js","../src/ProgressResult.js","../src/HttpTransport.js","../src/RequestError.js","../src/index.js"],"sourcesContent":["import { indexBy, prop, clone, equals, fromPairs, toPairs } from 'ramda';\n\nexport const DEFAULT_GRANULARITY = 'day';\n\nexport const GRANULARITIES = [\n  { name: undefined, title: 'w/o grouping' },\n  { name: 'second', title: 'Second' },\n  { name: 'minute', title: 'Minute' },\n  { name: 'hour', title: 'Hour' },\n  { name: 'day', title: 'Day' },\n  { name: 'week', title: 'Week' },\n  { name: 'month', title: 'Month' },\n  { name: 'quarter', title: 'Quarter' },\n  { name: 'year', title: 'Year' },\n];\n\nexport function removeEmptyQueryFields(_query) {\n  const query = _query || {};\n  \n  return fromPairs(\n    toPairs(query)\n      .map(([key, value]) => {\n        if (\n          ['measures', 'dimensions', 'segments', 'timeDimensions', 'filters'].includes(key)\n        ) {\n          if (Array.isArray(value) && value.length === 0) {\n            return null;\n          }\n        }\n        \n        if (key === 'order' && value) {\n          if (Array.isArray(value) && !value.length) {\n            return null;\n          } else if (!Object.keys(value).length) {\n            return null;\n          }\n        }\n\n        return [key, value];\n      })\n      .filter(Boolean)\n  );\n}\n\nexport function validateQuery(_query) {\n  const query = _query || {};\n  \n  return removeEmptyQueryFields({\n    ...query,\n    filters: (query.filters || []).filter((f) => f.operator),\n    timeDimensions: (query.timeDimensions || []).filter(\n      (td) => !(!td.dateRange && !td.granularity)\n    ),\n  });\n}\n\nexport function areQueriesEqual(query1 = {}, query2 = {}) {\n  return (\n    equals(\n      Object.entries((query1 && query1.order) || {}),\n      Object.entries((query2 && query2.order) || {})\n    ) && equals(query1, query2)\n  );\n}\n\nexport function defaultOrder(query) {\n  const granularity = (query.timeDimensions || []).find((d) => d.granularity);\n\n  if (granularity) {\n    return {\n      [granularity.dimension]: 'asc',\n    };\n  } else if (\n    (query.measures || []).length > 0 &&\n    (query.dimensions || []).length > 0\n  ) {\n    return {\n      [query.measures[0]]: 'desc',\n    };\n  } else if ((query.dimensions || []).length > 0) {\n    return {\n      [query.dimensions[0]]: 'asc',\n    };\n  }\n\n  return {};\n}\n\nexport function defaultHeuristics(newState, oldQuery = {}, options) {\n  const { query, ...props } = clone(newState);\n  const { meta, sessionGranularity } = options;\n  const granularity = sessionGranularity || DEFAULT_GRANULARITY;\n\n  let state = {\n    query,\n    ...props,\n  };\n\n  let newQuery = null;\n  if (!areQueriesEqual(query, oldQuery)) {\n    newQuery = query;\n  }\n\n  if (Array.isArray(newQuery) || Array.isArray(oldQuery)) {\n    return newState;\n  }\n\n  if (newQuery) {\n    if (\n      (oldQuery.timeDimensions || []).length === 1 &&\n      (newQuery.timeDimensions || []).length === 1 &&\n      newQuery.timeDimensions[0].granularity &&\n      oldQuery.timeDimensions[0].granularity !==\n        newQuery.timeDimensions[0].granularity\n    ) {\n      state = {\n        ...state,\n        sessionGranularity: newQuery.timeDimensions[0].granularity,\n      };\n    }\n\n    if (\n      ((oldQuery.measures || []).length === 0 &&\n        (newQuery.measures || []).length > 0) ||\n      ((oldQuery.measures || []).length === 1 &&\n        (newQuery.measures || []).length === 1 &&\n        oldQuery.measures[0] !== newQuery.measures[0])\n    ) {\n      const [td] = newQuery.timeDimensions || [];\n      const defaultTimeDimension = meta.defaultTimeDimensionNameFor(\n        newQuery.measures[0]\n      );\n      newQuery = {\n        ...newQuery,\n        timeDimensions: defaultTimeDimension\n          ? [\n            {\n              dimension: defaultTimeDimension,\n              granularity: (td && td.granularity) || granularity,\n              dateRange: td && td.dateRange,\n            },\n          ]\n          : [],\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: defaultTimeDimension ? 'line' : 'number',\n      };\n    }\n\n    if (\n      (oldQuery.dimensions || []).length === 0 &&\n      (newQuery.dimensions || []).length > 0\n    ) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: (newQuery.timeDimensions || []).map((td) => ({\n          ...td,\n          granularity: undefined,\n        })),\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: 'table',\n      };\n    }\n\n    if (\n      (oldQuery.dimensions || []).length > 0 &&\n      (newQuery.dimensions || []).length === 0\n    ) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: (newQuery.timeDimensions || []).map((td) => ({\n          ...td,\n          granularity: td.granularity || granularity,\n        })),\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        chartType: (newQuery.timeDimensions || []).length ? 'line' : 'number',\n      };\n    }\n\n    if (\n      ((oldQuery.dimensions || []).length > 0 ||\n        (oldQuery.measures || []).length > 0) &&\n      (newQuery.dimensions || []).length === 0 &&\n      (newQuery.measures || []).length === 0\n    ) {\n      newQuery = {\n        ...newQuery,\n        timeDimensions: [],\n        filters: [],\n      };\n\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: newQuery,\n        sessionGranularity: null,\n      };\n    }\n    return state;\n  }\n\n  if (state.chartType) {\n    const newChartType = state.chartType;\n    if (\n      (newChartType === 'line' || newChartType === 'area') &&\n      (oldQuery.timeDimensions || []).length === 1 &&\n      !oldQuery.timeDimensions[0].granularity\n    ) {\n      const [td] = oldQuery.timeDimensions;\n      return {\n        ...state,\n        pivotConfig: null,\n        query: {\n          ...oldQuery,\n          timeDimensions: [{ ...td, granularity }],\n        },\n      };\n    }\n\n    if (\n      (newChartType === 'pie' ||\n        newChartType === 'table' ||\n        newChartType === 'number') &&\n      (oldQuery.timeDimensions || []).length === 1 &&\n      oldQuery.timeDimensions[0].granularity\n    ) {\n      const [td] = oldQuery.timeDimensions;\n      return {\n        ...state,\n        pivotConfig: null,\n        shouldApplyHeuristicOrder: true,\n        query: {\n          ...oldQuery,\n          timeDimensions: [{ ...td, granularity: undefined }],\n        },\n      };\n    }\n  }\n\n  return state;\n}\n\nexport function isQueryPresent(query) {\n  if (!query) {\n    return false;\n  }\n\n  return (Array.isArray(query) ? query : [query]).every(\n    (q) => (q.measures && q.measures.length) ||\n      (q.dimensions && q.dimensions.length) ||\n      (q.timeDimensions && q.timeDimensions.length)\n  );\n}\n\nexport function movePivotItem(\n  pivotConfig,\n  sourceIndex,\n  destinationIndex,\n  sourceAxis,\n  destinationAxis\n) {\n  const nextPivotConfig = {\n    ...pivotConfig,\n    x: [...pivotConfig.x],\n    y: [...pivotConfig.y],\n  };\n  const id = pivotConfig[sourceAxis][sourceIndex];\n  const lastIndex = nextPivotConfig[destinationAxis].length - 1;\n\n  if (id === 'measures') {\n    destinationIndex = lastIndex + 1;\n  } else if (\n    destinationIndex >= lastIndex &&\n    nextPivotConfig[destinationAxis][lastIndex] === 'measures'\n  ) {\n    destinationIndex = lastIndex - 1;\n  }\n\n  nextPivotConfig[sourceAxis].splice(sourceIndex, 1);\n  nextPivotConfig[destinationAxis].splice(destinationIndex, 0, id);\n\n  return nextPivotConfig;\n}\n\nexport function moveItemInArray(list, sourceIndex, destinationIndex) {\n  const result = [...list];\n  const [removed] = result.splice(sourceIndex, 1);\n  result.splice(destinationIndex, 0, removed);\n\n  return result;\n}\n\nexport function flattenFilters(filters = []) {\n  return filters.reduce((memo, filter) => {\n    if (filter.or || filter.and) {\n      return [...memo, ...flattenFilters(filter.or || filter.and)];\n    }\n\n    return [...memo, filter];\n  }, []);\n}\n\nexport function getQueryMembers(query = {}) {\n  const keys = ['measures', 'dimensions', 'segments'];\n  const members = new Set();\n\n  keys.forEach((key) => (query[key] || []).forEach((member) => members.add(member)));\n  (query.timeDimensions || []).forEach((td) => members.add(td.dimension));\n\n  flattenFilters(query.filters).forEach((filter) => members.add(filter.dimension || filter.member));\n\n  return [...members];\n}\n\nexport function getOrderMembersFromOrder(orderMembers, order) {\n  const ids = new Set();\n  const indexedOrderMembers = indexBy(prop('id'), orderMembers);\n  const entries = Array.isArray(order) ? order : Object.entries(order || {});\n  const nextOrderMembers = [];\n\n  entries.forEach(([memberId, currentOrder]) => {\n    if (currentOrder !== 'none' && indexedOrderMembers[memberId]) {\n      ids.add(memberId);\n      nextOrderMembers.push({\n        ...indexedOrderMembers[memberId],\n        order: currentOrder,\n      });\n    }\n  });\n  orderMembers.forEach((member) => {\n    if (!ids.has(member.id)) {\n      nextOrderMembers.push({\n        ...member,\n        order: member.order || 'none',\n      });\n    }\n  });\n\n  return nextOrderMembers;\n}\n\nexport function aliasSeries(values, index, pivotConfig, duplicateMeasures) {\n  const nonNullValues = values.filter((value) => value != null);\n\n  if (\n    pivotConfig &&\n    pivotConfig.aliasSeries &&\n    pivotConfig.aliasSeries[index]\n  ) {\n    return [pivotConfig.aliasSeries[index], ...nonNullValues];\n  } else if (duplicateMeasures.has(nonNullValues[0])) {\n    return [index, ...nonNullValues];\n  }\n\n  return nonNullValues;\n}\n","import dayjs from 'dayjs';\nimport quarterOfYear from 'dayjs/plugin/quarterOfYear';\n\nimport en from 'dayjs/locale/en';\nimport {\n  groupBy, pipe, fromPairs, uniq, filter, map, dropLast, equals, reduce, minBy, maxBy, clone, mergeDeepLeft,\n  pluck, mergeAll, flatten,\n} from 'ramda';\n\nimport { aliasSeries } from './utils';\n\ndayjs.extend(quarterOfYear);\n\n// When granularity is week, weekStart Value must be 1. However, since the client can change it globally (https://day.js.org/docs/en/i18n/changing-locale)\n// So the function below has been added.\nconst internalDayjs = (...args) => dayjs(...args).locale({ ...en, weekStart: 1 });\n\nexport const TIME_SERIES = {\n  day: (range) => range.by('d').map(d => d.format('YYYY-MM-DDT00:00:00.000')),\n  month: (range) => range.snapTo('month').by('M').map(d => d.format('YYYY-MM-01T00:00:00.000')),\n  year: (range) => range.snapTo('year').by('y').map(d => d.format('YYYY-01-01T00:00:00.000')),\n  hour: (range) => range.by('h').map(d => d.format('YYYY-MM-DDTHH:00:00.000')),\n  minute: (range) => range.by('m').map(d => d.format('YYYY-MM-DDTHH:mm:00.000')),\n  second: (range) => range.by('s').map(d => d.format('YYYY-MM-DDTHH:mm:ss.000')),\n  week: (range) => range.snapTo('week').by('w').map(d => d.startOf('week').format('YYYY-MM-DDT00:00:00.000')),\n  quarter: (range) => range.snapTo('quarter').by('quarter').map(d => d.startOf('quarter').format('YYYY-MM-DDT00:00:00.000')),\n};\n\nconst DateRegex = /^\\d\\d\\d\\d-\\d\\d-\\d\\d$/;\nconst LocalDateRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z?$/;\n\nconst groupByToPairs = (keyFn) => {\n  const acc = new Map();\n\n  return (data) => {\n    data.forEach((row) => {\n      const key = keyFn(row);\n\n      if (!acc.has(key)) {\n        acc.set(key, []);\n      }\n\n      acc.get(key).push(row);\n    });\n\n    return Array.from(acc.entries());\n  };\n};\n\nconst unnest = (arr) => {\n  const res = [];\n  arr.forEach((subArr) => {\n    subArr.forEach(element => res.push(element));\n  });\n\n  return res;\n};\n\nexport const dayRange = (from, to) => ({\n  by: (value) => {\n    const results = [];\n\n    let start = internalDayjs(from);\n    const end = internalDayjs(to);\n\n    while (start.isBefore(end) || start.isSame(end)) {\n      results.push(start);\n      start = start.add(1, value);\n    }\n\n    return results;\n  },\n  snapTo: (value) => dayRange(internalDayjs(from).startOf(value), internalDayjs(to).endOf(value)),\n  start: internalDayjs(from),\n  end: internalDayjs(to),\n});\n\nexport const QUERY_TYPE = {\n  REGULAR_QUERY: 'regularQuery',\n  COMPARE_DATE_RANGE_QUERY: 'compareDateRangeQuery',\n  BLENDING_QUERY: 'blendingQuery',\n};\n\nclass ResultSet {\n  static measureFromAxis(axisValues) {\n    return axisValues[axisValues.length - 1];\n  }\n\n  static timeDimensionMember(td) {\n    return `${td.dimension}.${td.granularity}`;\n  }\n\n  static deserialize(data, options = {}) {\n    return new ResultSet(data.loadResponse, options);\n  }\n\n  constructor(loadResponse, options = {}) {\n    this.loadResponse = loadResponse;\n\n    if (this.loadResponse.queryType != null) {\n      this.queryType = loadResponse.queryType;\n      this.loadResponses = loadResponse.results;\n    } else {\n      this.queryType = QUERY_TYPE.REGULAR_QUERY;\n      this.loadResponse.pivotQuery = {\n        ...loadResponse.query,\n        queryType: this.queryType\n      };\n      this.loadResponses = [loadResponse];\n    }\n\n    if (!Object.values(QUERY_TYPE).includes(this.queryType)) {\n      throw new Error('Unknown query type');\n    }\n\n    this.parseDateMeasures = options.parseDateMeasures;\n    this.options = options;\n\n    this.backwardCompatibleData = [];\n  }\n\n  drillDown(drillDownLocator, pivotConfig) {\n    if (this.queryType === QUERY_TYPE.COMPARE_DATE_RANGE_QUERY) {\n      throw new Error('compareDateRange drillDown query is not currently supported');\n    }\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      throw new Error('Data blending drillDown query is not currently supported');\n    }\n\n    const { xValues = [], yValues = [] } = drillDownLocator;\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig);\n\n    const values = [];\n    normalizedPivotConfig.x.forEach((member, currentIndex) => values.push([member, xValues[currentIndex]]));\n    normalizedPivotConfig.y.forEach((member, currentIndex) => values.push([member, yValues[currentIndex]]));\n\n    const { filters: parentFilters = [], segments = [] } = this.query();\n    const { measures } = this.loadResponses[0].annotation;\n    let [, measureName] = values.find(([member]) => member === 'measures') || [];\n\n    if (measureName === undefined) {\n      [measureName] = Object.keys(measures);\n    }\n\n    if (!(measures[measureName] && measures[measureName].drillMembers || []).length) {\n      return null;\n    }\n\n    const filters = [\n      {\n        member: measureName,\n        operator: 'measureFilter',\n      },\n      ...parentFilters\n    ];\n    const timeDimensions = [];\n\n    values.filter(([member]) => member !== 'measures')\n      .forEach(([member, value]) => {\n        const [cubeName, dimension, granularity] = member.split('.');\n\n        if (granularity !== undefined) {\n          const range = dayRange(value, value).snapTo(granularity);\n\n          timeDimensions.push({\n            dimension: [cubeName, dimension].join('.'),\n            dateRange: [\n              range.start,\n              range.end\n            ].map((dt) => dt.format('YYYY-MM-DDTHH:mm:ss.SSS')),\n          });\n        } else if (value == null) {\n          filters.push({\n            member,\n            operator: 'notSet',\n          });\n        } else {\n          filters.push({\n            member,\n            operator: 'equals',\n            values: [value.toString()],\n          });\n        }\n      });\n\n    const { query } = this.loadResponses[0];\n    if (\n      timeDimensions.length === 0 &&\n      query.timeDimensions.length > 0 &&\n      query.timeDimensions[0].granularity == null\n    ) {\n      timeDimensions.push(query.timeDimensions[0]);\n    }\n\n    return {\n      ...measures[measureName].drillMembersGrouped,\n      filters,\n      ...(segments.length > 0 ? { segments } : {}),\n      timeDimensions,\n      segments,\n      timezone: query.timezone\n    };\n  }\n\n  series(pivotConfig) {\n    return this.seriesNames(pivotConfig).map(({ title, shortTitle, key }) => ({\n      title,\n      shortTitle,\n      key,\n      series: this.chartPivot(pivotConfig).map(({ x, ...obj }) => ({ value: obj[key], x }))\n    }));\n  }\n\n  axisValues(axis, resultIndex = 0) {\n    const { query } = this.loadResponses[resultIndex];\n\n    return row => {\n      const value = (measure) => axis.filter(d => d !== 'measures')\n        .map(d => (row[d] != null ? row[d] : null)).concat(measure ? [measure] : []);\n\n      if (axis.find(d => d === 'measures') && (query.measures || []).length) {\n        return query.measures.map(value);\n      }\n\n      return [value()];\n    };\n  }\n\n  axisValuesString(axisValues, delimiter) {\n    const formatValue = (v) => {\n      if (v == null) {\n        return '∅';\n      } else if (v === '') {\n        return '[Empty string]';\n      } else {\n        return v;\n      }\n    };\n    return axisValues.map(formatValue).join(delimiter || ', ');\n  }\n\n  static getNormalizedPivotConfig(query = {}, pivotConfig = null) {\n    const defaultPivotConfig = {\n      x: [],\n      y: [],\n      fillMissingDates: true,\n      joinDateRange: false\n    };\n\n    const {\n      measures = [],\n      dimensions = []\n    } = query;\n\n    const timeDimensions = (query.timeDimensions || []).filter(td => !!td.granularity);\n\n    pivotConfig = pivotConfig || (timeDimensions.length ? {\n      x: timeDimensions.map(td => ResultSet.timeDimensionMember(td)),\n      y: dimensions\n    } : {\n      x: dimensions,\n      y: []\n    });\n\n    pivotConfig = mergeDeepLeft(pivotConfig, defaultPivotConfig);\n\n    const substituteTimeDimensionMembers = axis => axis.map(\n      subDim => (\n        (\n          timeDimensions.find(td => td.dimension === subDim) &&\n          !dimensions.find(d => d === subDim)\n        ) ?\n          ResultSet.timeDimensionMember(query.timeDimensions.find(td => td.dimension === subDim)) :\n          subDim\n      )\n    );\n\n    pivotConfig.x = substituteTimeDimensionMembers(pivotConfig.x);\n    pivotConfig.y = substituteTimeDimensionMembers(pivotConfig.y);\n\n    const allIncludedDimensions = pivotConfig.x.concat(pivotConfig.y);\n    const allDimensions = timeDimensions.map(td => ResultSet.timeDimensionMember(td)).concat(dimensions);\n\n    const dimensionFilter = (key) => allDimensions.includes(key) || key === 'measures';\n\n    pivotConfig.x = pivotConfig.x.concat(\n      allDimensions.filter(d => !allIncludedDimensions.includes(d) && d !== 'compareDateRange')\n    )\n      .filter(dimensionFilter);\n    pivotConfig.y = pivotConfig.y.filter(dimensionFilter);\n\n    if (!pivotConfig.x.concat(pivotConfig.y).find(d => d === 'measures')) {\n      pivotConfig.y.push('measures');\n    }\n\n    if (dimensions.includes('compareDateRange') && !pivotConfig.y.concat(pivotConfig.x).includes('compareDateRange')) {\n      pivotConfig.y.unshift('compareDateRange');\n    }\n\n    if (!measures.length) {\n      pivotConfig.x = pivotConfig.x.filter(d => d !== 'measures');\n      pivotConfig.y = pivotConfig.y.filter(d => d !== 'measures');\n    }\n\n    return pivotConfig;\n  }\n\n  normalizePivotConfig(pivotConfig) {\n    return ResultSet.getNormalizedPivotConfig(this.loadResponse.pivotQuery, pivotConfig);\n  }\n\n  timeSeries(timeDimension, resultIndex) {\n    if (!timeDimension.granularity) {\n      return null;\n    }\n\n    let { dateRange } = timeDimension;\n\n    if (!dateRange) {\n      const member = ResultSet.timeDimensionMember(timeDimension);\n      const dates = pipe(\n        map(row => row[member] && internalDayjs(row[member])),\n        filter(Boolean)\n      )(this.timeDimensionBackwardCompatibleData(resultIndex));\n\n      dateRange = dates.length && [\n        reduce(minBy(d => d.toDate()), dates[0], dates),\n        reduce(maxBy(d => d.toDate()), dates[0], dates)\n      ] || null;\n    }\n\n    if (!dateRange) {\n      return null;\n    }\n\n    const padToDay = timeDimension.dateRange ?\n      timeDimension.dateRange.find(d => d.match(DateRegex)) :\n      !['hour', 'minute', 'second'].includes(timeDimension.granularity);\n\n    const [start, end] = dateRange;\n    const range = dayRange(start, end);\n\n    if (!TIME_SERIES[timeDimension.granularity]) {\n      throw new Error(`Unsupported time granularity: ${timeDimension.granularity}`);\n    }\n\n    return TIME_SERIES[timeDimension.granularity](\n      padToDay ? range.snapTo('d') : range\n    );\n  }\n\n  pivot(pivotConfig) {\n    pivotConfig = this.normalizePivotConfig(pivotConfig);\n    const { pivotQuery: query } = this.loadResponse;\n\n    const pivotImpl = (resultIndex = 0) => {\n      let groupByXAxis = groupByToPairs(({ xValues }) => this.axisValuesString(xValues));\n\n      const measureValue = (row, measure) => row[measure] || 0;\n\n      if (\n        pivotConfig.fillMissingDates &&\n        pivotConfig.x.length === 1 &&\n        (equals(\n          pivotConfig.x,\n          (query.timeDimensions || [])\n            .filter(td => Boolean(td.granularity))\n            .map(td => ResultSet.timeDimensionMember(td))\n        ))\n      ) {\n        const series = this.loadResponses.map(\n          (loadResponse) => this.timeSeries(loadResponse.query.timeDimensions[0], resultIndex)\n        );\n\n        if (series[0]) {\n          groupByXAxis = (rows) => {\n            const byXValues = groupBy(\n              ({ xValues }) => xValues[0],\n              rows\n            );\n            return series[resultIndex].map(d => [d, byXValues[d] || [{ xValues: [d], row: {} }]]);\n          };\n        }\n      }\n\n      const xGrouped = pipe(\n        map(row => this.axisValues(pivotConfig.x, resultIndex)(row).map(xValues => ({ xValues, row }))),\n        unnest,\n        groupByXAxis\n      )(this.timeDimensionBackwardCompatibleData(resultIndex));\n\n      const yValuesMap = {};\n      xGrouped.forEach(([, rows]) => {\n        rows.forEach(({ row }) => {\n          this.axisValues(pivotConfig.y, resultIndex)(row).forEach((values) => {\n            if (Object.keys(row).length > 0) {\n              yValuesMap[values.join()] = values;\n            }\n          });\n        });\n      });\n      const allYValues = Object.values(yValuesMap);\n\n      const measureOnX = Boolean(pivotConfig.x.find(d => d === 'measures'));\n\n      return xGrouped.map(([, rows]) => {\n        const { xValues } = rows[0];\n        const yGrouped = {};\n\n        rows.forEach(({ row }) => {\n          const arr = this.axisValues(pivotConfig.y, resultIndex)(row).map(yValues => ({ yValues, row }));\n          arr.forEach((res) => {\n            yGrouped[this.axisValuesString(res.yValues)] = res;\n          });\n        });\n\n        return {\n          xValues,\n          yValuesArray: unnest(allYValues.map(yValues => {\n            const measure = measureOnX ?\n              ResultSet.measureFromAxis(xValues) :\n              ResultSet.measureFromAxis(yValues);\n\n            return [[yValues, measureValue((yGrouped[this.axisValuesString(yValues)] ||\n              ({ row: {} })).row, measure)]];\n          }))\n        };\n      });\n    };\n\n    const pivots = this.loadResponses.length > 1\n      ? this.loadResponses.map((_, index) => pivotImpl(index))\n      : [];\n\n    return pivots.length\n      ? this.mergePivots(pivots, pivotConfig.joinDateRange)\n      : pivotImpl();\n  }\n\n  mergePivots(pivots, joinDateRange) {\n    const minLengthPivot = pivots.reduce(\n      (memo, current) => (memo != null && current.length >= memo.length ? memo : current), null\n    );\n\n    return minLengthPivot.map((_, index) => {\n      const xValues = joinDateRange\n        ? [pivots.map((pivot) => pivot[index] && pivot[index].xValues || []).join(', ')]\n        : minLengthPivot[index].xValues;\n\n      return {\n        xValues,\n        yValuesArray: unnest(pivots.map((pivot) => pivot[index].yValuesArray))\n      };\n    });\n  }\n\n  pivotedRows(pivotConfig) { // TODO\n    return this.chartPivot(pivotConfig);\n  }\n\n  chartPivot(pivotConfig) {\n    const validate = (value) => {\n      if (this.parseDateMeasures && LocalDateRegex.test(value)) {\n        return new Date(value);\n      } else if (!Number.isNaN(Number.parseFloat(value))) {\n        return Number.parseFloat(value);\n      }\n\n      return value;\n    };\n\n    const duplicateMeasures = new Set();\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      const allMeasures = flatten(this.loadResponses.map(({ query }) => query.measures));\n      allMeasures.filter((e, i, a) => a.indexOf(e) !== i).forEach(m => duplicateMeasures.add(m));\n    }\n\n    return this.pivot(pivotConfig).map(({ xValues, yValuesArray }) => {\n      const yValuesMap = {};\n\n      yValuesArray\n        .forEach(([yValues, m], i) => {\n          yValuesMap[this.axisValuesString(aliasSeries(yValues, i, pivotConfig, duplicateMeasures), ',')] = m && validate(m);\n        });\n\n      return ({\n        x: this.axisValuesString(xValues, ','),\n        xValues,\n        ...yValuesMap\n      });\n    });\n  }\n\n  tablePivot(pivotConfig) {\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig || {});\n    const isMeasuresPresent = normalizedPivotConfig.x.concat(normalizedPivotConfig.y).includes('measures');\n\n    return this.pivot(normalizedPivotConfig).map(({ xValues, yValuesArray }) => fromPairs(\n      normalizedPivotConfig.x\n        .map((key, index) => [key, xValues[index]])\n        .concat(\n          isMeasuresPresent ? yValuesArray.map(([yValues, measure]) => [\n            yValues.length ? yValues.join() : 'value',\n            measure\n          ]) : []\n        )\n    ));\n  }\n\n  tableColumns(pivotConfig) {\n    const normalizedPivotConfig = this.normalizePivotConfig(pivotConfig || {});\n    const annotations = pipe(\n      pluck('annotation'),\n      reduce(mergeDeepLeft(), {})\n    )(this.loadResponses);\n    const flatMeta = Object.values(annotations).reduce((a, b) => ({ ...a, ...b }), {});\n    const schema = {};\n\n    const extractFields = (key) => {\n      const { title, shortTitle, type, format, meta } = flatMeta[key] || {};\n\n      return {\n        key,\n        title,\n        shortTitle,\n        type,\n        format,\n        meta\n      };\n    };\n\n    const pivot = this.pivot(normalizedPivotConfig);\n\n    (pivot[0] && pivot[0].yValuesArray || []).forEach(([yValues]) => {\n      if (yValues.length > 0) {\n        let currentItem = schema;\n\n        yValues.forEach((value, index) => {\n          currentItem[`_${value}`] = {\n            key: value,\n            memberId: normalizedPivotConfig.y[index] === 'measures'\n              ? value\n              : normalizedPivotConfig.y[index],\n            children: (currentItem[`_${value}`] && currentItem[`_${value}`].children) || {}\n          };\n\n          currentItem = currentItem[`_${value}`].children;\n        });\n      }\n    });\n\n    const toColumns = (item = {}, path = []) => {\n      if (Object.keys(item).length === 0) {\n        return [];\n      }\n\n      return Object.values(item).map(({ key, ...currentItem }) => {\n        const children = toColumns(currentItem.children, [\n          ...path,\n          key\n        ]);\n\n        const { title, shortTitle, ...fields } = extractFields(currentItem.memberId);\n\n        const dimensionValue = key !== currentItem.memberId || title == null ? key : '';\n\n        if (!children.length) {\n          return {\n            ...fields,\n            key,\n            dataIndex: [...path, key].join(),\n            title: [title, dimensionValue].join(' ').trim(),\n            shortTitle: dimensionValue || shortTitle,\n          };\n        }\n\n        return {\n          ...fields,\n          key,\n          title: [title, dimensionValue].join(' ').trim(),\n          shortTitle: dimensionValue || shortTitle,\n          children,\n        };\n      });\n    };\n\n    let otherColumns = [];\n\n    if (!pivot.length && normalizedPivotConfig.y.includes('measures')) {\n      otherColumns = (this.loadResponses[0].query.measures || []).map(\n        (key) => ({ ...extractFields(key), dataIndex: key })\n      );\n    }\n\n    // Syntatic column to display the measure value\n    if (!normalizedPivotConfig.y.length && normalizedPivotConfig.x.includes('measures')) {\n      otherColumns.push({\n        key: 'value',\n        dataIndex: 'value',\n        title: 'Value',\n        shortTitle: 'Value',\n        type: 'string',\n      });\n    }\n\n    return normalizedPivotConfig.x\n      .map((key) => {\n        if (key === 'measures') {\n          return {\n            key: 'measures',\n            dataIndex: 'measures',\n            title: 'Measures',\n            shortTitle: 'Measures',\n            type: 'string',\n          };\n        }\n\n        return ({ ...extractFields(key), dataIndex: key });\n      })\n      .concat(toColumns(schema))\n      .concat(otherColumns);\n  }\n\n  totalRow(pivotConfig) {\n    return this.chartPivot(pivotConfig)[0];\n  }\n\n  categories(pivotConfig) { // TODO\n    return this.chartPivot(pivotConfig);\n  }\n\n  seriesNames(pivotConfig) {\n    pivotConfig = this.normalizePivotConfig(pivotConfig);\n    const measures = pipe(\n      pluck('annotation'),\n      pluck('measures'),\n      mergeAll\n    )(this.loadResponses);\n\n    const seriesNames = unnest(this.loadResponses.map((_, index) => pipe(\n      map(this.axisValues(pivotConfig.y, index)),\n      unnest,\n      uniq\n    )(\n      this.timeDimensionBackwardCompatibleData(index)\n    )));\n    const duplicateMeasures = new Set();\n    if (this.queryType === QUERY_TYPE.BLENDING_QUERY) {\n      const allMeasures = flatten(this.loadResponses.map(({ query }) => query.measures));\n      allMeasures.filter((e, i, a) => a.indexOf(e) !== i).forEach(m => duplicateMeasures.add(m));\n    }\n\n    return seriesNames.map((axisValues, i) => {\n      const aliasedAxis = aliasSeries(axisValues, i, pivotConfig, duplicateMeasures);\n      return {\n        title: this.axisValuesString(\n          pivotConfig.y.find(d => d === 'measures') ?\n            dropLast(1, aliasedAxis).concat(\n              measures[\n                ResultSet.measureFromAxis(axisValues)\n              ].title\n            ) :\n            aliasedAxis, ', '\n        ),\n        shortTitle: this.axisValuesString(\n          pivotConfig.y.find(d => d === 'measures') ?\n            dropLast(1, aliasedAxis).concat(\n              measures[\n                ResultSet.measureFromAxis(axisValues)\n              ].shortTitle\n            ) :\n            aliasedAxis, ', '\n        ),\n        key: this.axisValuesString(aliasedAxis, ','),\n        yValues: axisValues\n      };\n    });\n  }\n\n  query() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].query;\n  }\n\n  pivotQuery() {\n    return this.loadResponse.pivotQuery || null;\n  }\n\n  rawData() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].data;\n  }\n\n  annotation() {\n    if (this.queryType !== QUERY_TYPE.REGULAR_QUERY) {\n      throw new Error(`Method is not supported for a '${this.queryType}' query type. Please use decompose`);\n    }\n\n    return this.loadResponses[0].annotation;\n  }\n\n  timeDimensionBackwardCompatibleData(resultIndex) {\n    if (resultIndex === undefined) {\n      throw new Error('resultIndex is required');\n    }\n\n    if (!this.backwardCompatibleData[resultIndex]) {\n      const { data, query } = this.loadResponses[resultIndex];\n      const timeDimensions = (query.timeDimensions || []).filter(td => Boolean(td.granularity));\n\n      this.backwardCompatibleData[resultIndex] = data.map(row => (\n        {\n          ...row,\n          ...(\n            fromPairs(Object.keys(row)\n              .filter(\n                field => timeDimensions.find(d => d.dimension === field) &&\n                  !row[ResultSet.timeDimensionMember(timeDimensions.find(d => d.dimension === field))]\n              ).map(field => (\n                [ResultSet.timeDimensionMember(timeDimensions.find(d => d.dimension === field)), row[field]]\n              )))\n          )\n        }\n      ));\n    }\n\n    return this.backwardCompatibleData[resultIndex];\n  }\n\n  decompose() {\n    return this.loadResponses.map((result) => new ResultSet({\n      queryType: QUERY_TYPE.REGULAR_QUERY,\n      pivotQuery: {\n        ...result.query,\n        queryType: QUERY_TYPE.REGULAR_QUERY,\n      },\n      results: [result]\n    }, this.options));\n  }\n\n  serialize() {\n    return {\n      loadResponse: clone(this.loadResponse)\n    };\n  }\n}\n\nexport default ResultSet;\n","export default class SqlQuery {\n  constructor(sqlQuery) {\n    this.sqlQuery = sqlQuery;\n  }\n\n  rawQuery() {\n    return this.sqlQuery.sql;\n  }\n\n  sql() {\n    return this.rawQuery().sql[0];\n  }\n}\n","/**\n * @module @cubejs-client/core\n */\n\nimport { unnest, fromPairs } from 'ramda';\n\nconst memberMap = (memberArray) => fromPairs(memberArray.map((m) => [m.name, m]));\n\nconst operators = {\n  string: [\n    { name: 'contains', title: 'contains' },\n    { name: 'notContains', title: 'does not contain' },\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'set', title: 'is set' },\n    { name: 'notSet', title: 'is not set' },\n    { name: 'startsWith', title: 'starts with' },\n    { name: 'notStartsWith', title: 'does not start with' },\n    { name: 'endsWith', title: 'ends with' },\n    { name: 'notEndsWith', title: 'does not end with' },\n  ],\n  number: [\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'set', title: 'is set' },\n    { name: 'notSet', title: 'is not set' },\n    { name: 'gt', title: '>' },\n    { name: 'gte', title: '>=' },\n    { name: 'lt', title: '<' },\n    { name: 'lte', title: '<=' },\n  ],\n  time: [\n    { name: 'equals', title: 'equals' },\n    { name: 'notEquals', title: 'does not equal' },\n    { name: 'inDateRange', title: 'in date range' },\n    { name: 'notInDateRange', title: 'not in date range' },\n    { name: 'afterDate', title: 'after date' },\n    { name: 'beforeDate', title: 'before date' },\n  ],\n};\n\n/**\n * Contains information about available cubes and it's members.\n */\nclass Meta {\n  constructor(metaResponse) {\n    this.meta = metaResponse;\n    const { cubes } = this.meta;\n    this.cubes = cubes;\n    this.cubesMap = fromPairs(\n      cubes.map((c) => [\n        c.name,\n        {\n          measures: memberMap(c.measures),\n          dimensions: memberMap(c.dimensions),\n          segments: memberMap(c.segments),\n        },\n      ])\n    );\n  }\n\n  membersForQuery(query, memberType) {\n    return unnest(this.cubes.map((c) => c[memberType])).sort((a, b) => (a.title > b.title ? 1 : -1));\n  }\n\n  membersGroupedByCube() {\n    const memberKeys = ['measures', 'dimensions', 'segments', 'timeDimensions'];\n\n    return this.cubes.reduce(\n      (memo, cube) => {\n        memberKeys.forEach((key) => {\n          let members = cube[key];\n\n          if (key === 'timeDimensions') {\n            members = cube.dimensions.filter((m) => m.type === 'time');\n          }\n\n          memo[key] = [\n            ...memo[key],\n            {\n              cubeName: cube.name,\n              cubeTitle: cube.title,\n              members\n            },\n          ];\n        });\n\n        return memo;\n      },\n      {\n        measures: [],\n        dimensions: [],\n        segments: [],\n        timeDimensions: [],\n      }\n    );\n  }\n\n  resolveMember(memberName, memberType) {\n    const [cube] = memberName.split('.');\n\n    if (!this.cubesMap[cube]) {\n      return { title: memberName, error: `Cube not found ${cube} for path '${memberName}'` };\n    }\n\n    const memberTypes = Array.isArray(memberType) ? memberType : [memberType];\n    const member = memberTypes\n      .map((type) => this.cubesMap[cube][type] && this.cubesMap[cube][type][memberName])\n      .find((m) => m);\n\n    if (!member) {\n      return {\n        title: memberName,\n        error: `Path not found '${memberName}'`,\n      };\n    }\n\n    return member;\n  }\n\n  defaultTimeDimensionNameFor(memberName) {\n    const [cube] = memberName.split('.');\n    if (!this.cubesMap[cube]) {\n      return null;\n    }\n    return Object.keys(this.cubesMap[cube].dimensions || {}).find(\n      (d) => this.cubesMap[cube].dimensions[d].type === 'time'\n    );\n  }\n\n  filterOperatorsForMember(memberName, memberType) {\n    const member = this.resolveMember(memberName, memberType);\n\n    return operators[member.type] || operators.string;\n  }\n}\n\nexport default Meta;\n","export default class ProgressResult {\n  constructor(progressResponse) {\n    this.progressResponse = progressResponse;\n  }\n\n  stage() {\n    return this.progressResponse.stage;\n  }\n\n  timeElapsed() {\n    return this.progressResponse.timeElapsed;\n  }\n}\n","import fetch from 'cross-fetch';\nimport 'url-search-params-polyfill';\n\nclass HttpTransport {\n  constructor({ authorization, apiUrl, method, headers = {}, credentials }) {\n    this.authorization = authorization;\n    this.apiUrl = apiUrl;\n    this.method = method;\n    this.headers = headers;\n    this.credentials = credentials;\n  }\n\n  request(method, { baseRequestId, ...params }) {\n    let spanCounter = 1;\n    const searchParams = new URLSearchParams(\n      params && Object.keys(params)\n        .map(k => ({ [k]: typeof params[k] === 'object' ? JSON.stringify(params[k]) : params[k] }))\n        .reduce((a, b) => ({ ...a, ...b }), {})\n    );\n\n    let url = `${this.apiUrl}/${method}${searchParams.toString().length ? `?${searchParams}` : ''}`;\n\n    const requestMethod = this.method || (url.length < 2000 ? 'GET' : 'POST');\n    if (requestMethod === 'POST') {\n      url = `${this.apiUrl}/${method}`;\n      this.headers['Content-Type'] = 'application/json';\n    }\n\n    // Currently, all methods make GET requests. If a method makes a request with a body payload,\n    // remember to add {'Content-Type': 'application/json'} to the header.\n    const runRequest = () => fetch(url, {\n      method: requestMethod,\n      headers: {\n        Authorization: this.authorization,\n        'x-request-id': baseRequestId && `${baseRequestId}-span-${spanCounter++}`,\n        ...this.headers\n      },\n      credentials: this.credentials,\n      body: requestMethod === 'POST' ? JSON.stringify(params) : null\n    });\n\n    return {\n      /* eslint no-unsafe-finally: off */\n      async subscribe(callback) {\n        let result = {\n          error: 'network Error' // add default error message\n        };\n        try {\n          result = await runRequest();\n        } finally {\n          return callback(result, () => this.subscribe(callback));\n        }\n      }\n    };\n  }\n}\n\nexport default HttpTransport;\n","export default class RequestError extends Error {\n  constructor(message, response, status) {\n    super(message);\n    this.response = response;\n    this.status = status;\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport ResultSet from './ResultSet';\nimport SqlQuery from './SqlQuery';\nimport Meta from './Meta';\nimport ProgressResult from './ProgressResult';\nimport HttpTransport from './HttpTransport';\nimport RequestError from './RequestError';\n\nlet mutexCounter = 0;\n\nconst MUTEX_ERROR = 'Mutex has been changed';\n\n/**\n * Query result dataset formats enum.\n */\nconst ResultType = {\n  DEFAULT: 'default',\n  COMPACT: 'compact'\n};\n\nfunction mutexPromise(promise) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      resolve(await promise);\n    } catch (error) {\n      if (error !== MUTEX_ERROR) {\n        reject(error);\n      }\n    }\n  });\n}\n\nclass CubejsApi {\n  constructor(apiToken, options) {\n    if (apiToken !== null && !Array.isArray(apiToken) && typeof apiToken === 'object') {\n      options = apiToken;\n      apiToken = undefined;\n    }\n    options = options || {};\n\n    if (!options.transport && !options.apiUrl) {\n      throw new Error('The `apiUrl` option is required');\n    }\n\n    this.apiToken = apiToken;\n    this.apiUrl = options.apiUrl;\n    this.method = options.method;\n    this.headers = options.headers || {};\n    this.credentials = options.credentials;\n    this.transport = options.transport || new HttpTransport({\n      authorization: typeof apiToken === 'function' ? undefined : apiToken,\n      apiUrl: this.apiUrl,\n      method: this.method,\n      headers: this.headers,\n      credentials: this.credentials\n    });\n    this.pollInterval = options.pollInterval || 5;\n    this.parseDateMeasures = options.parseDateMeasures;\n\n    this.updateAuthorizationPromise = null;\n  }\n\n  request(method, params) {\n    return this.transport.request(method, {\n      baseRequestId: uuidv4(),\n      ...params\n    });\n  }\n\n  loadMethod(request, toResult, options, callback) {\n    const mutexValue = ++mutexCounter;\n    if (typeof options === 'function' && !callback) {\n      callback = options;\n      options = undefined;\n    }\n\n    options = options || {};\n\n    const mutexKey = options.mutexKey || 'default';\n    if (options.mutexObj) {\n      options.mutexObj[mutexKey] = mutexValue;\n    }\n\n    const requestPromise = this\n      .updateTransportAuthorization()\n      .then(() => request());\n\n    let skipAuthorizationUpdate = true;\n    let unsubscribed = false;\n\n    const checkMutex = async () => {\n      const requestInstance = await requestPromise;\n\n      if (\n        options.mutexObj &&\n        options.mutexObj[mutexKey] !== mutexValue\n      ) {\n        unsubscribed = true;\n        if (requestInstance.unsubscribe) {\n          await requestInstance.unsubscribe();\n        }\n        throw MUTEX_ERROR;\n      }\n    };\n\n    const loadImpl = async (response, next) => {\n      const requestInstance = await requestPromise;\n\n      const subscribeNext = async () => {\n        if (options.subscribe && !unsubscribed) {\n          if (requestInstance.unsubscribe) {\n            return next();\n          } else {\n            await new Promise(resolve => setTimeout(() => resolve(), this.pollInterval * 1000));\n            return next();\n          }\n        }\n        return null;\n      };\n\n      const continueWait = async (wait) => {\n        if (!unsubscribed) {\n          if (wait) {\n            await new Promise(resolve => setTimeout(() => resolve(), this.pollInterval * 1000));\n          }\n          return next();\n        }\n        return null;\n      };\n\n      if (options.subscribe && !skipAuthorizationUpdate) {\n        await this.updateTransportAuthorization();\n      }\n\n      skipAuthorizationUpdate = false;\n\n      if (response.status === 502) {\n        await checkMutex();\n        return continueWait(true);\n      }\n\n      let body = {};\n      let text = '';\n      try {\n        text = await response.text();\n        body = JSON.parse(text);\n      } catch (_) {\n        body.error = text;\n      }\n\n      if (body.error === 'Continue wait') {\n        await checkMutex();\n        if (options.progressCallback) {\n          options.progressCallback(new ProgressResult(body));\n        }\n        return continueWait();\n      }\n\n      if (response.status !== 200) {\n        await checkMutex();\n        if (!options.subscribe && requestInstance.unsubscribe) {\n          await requestInstance.unsubscribe();\n        }\n\n        const error = new RequestError(body.error, body, response.status); // TODO error class\n        if (callback) {\n          callback(error);\n        } else {\n          throw error;\n        }\n\n        return subscribeNext();\n      }\n      await checkMutex();\n      if (!options.subscribe && requestInstance.unsubscribe) {\n        await requestInstance.unsubscribe();\n      }\n      const result = toResult(body);\n      if (callback) {\n        callback(null, result);\n      } else {\n        return result;\n      }\n\n      return subscribeNext();\n    };\n\n    const promise = requestPromise.then(requestInstance => mutexPromise(requestInstance.subscribe(loadImpl)));\n\n    if (callback) {\n      return {\n        unsubscribe: async () => {\n          const requestInstance = await requestPromise;\n\n          unsubscribed = true;\n          if (requestInstance.unsubscribe) {\n            return requestInstance.unsubscribe();\n          }\n          return null;\n        }\n      };\n    } else {\n      return promise;\n    }\n  }\n\n  async updateTransportAuthorization() {\n    if (this.updateAuthorizationPromise) {\n      await this.updateAuthorizationPromise;\n      return;\n    }\n\n    if (typeof this.apiToken === 'function') {\n      this.updateAuthorizationPromise = new Promise(async (resolve, reject) => {\n        try {\n          const token = await this.apiToken();\n          if (this.transport.authorization !== token) {\n            this.transport.authorization = token;\n          }\n          resolve();\n        } catch (error) {\n          reject(error);\n        } finally {\n          this.updateAuthorizationPromise = null;\n        }\n      });\n\n      await this.updateAuthorizationPromise;\n    }\n  }\n\n  /**\n   * Add system properties to a query object.\n   * @param {Query} query\n   * @param {string} responseFormat\n   * @returns {void}\n   * @private\n   */\n  patchQueryInternal(query, responseFormat) {\n    if (\n      responseFormat === ResultType.COMPACT &&\n      query.responseFormat !== ResultType.COMPACT\n    ) {\n      return {\n        ...query,\n        responseFormat: ResultType.COMPACT,\n      };\n    } else {\n      return query;\n    }\n  }\n\n  /**\n   * Process result fetched from the gateway#load method according\n   * to the network protocol.\n   * @param {*} response\n   * @returns ResultSet\n   * @private\n   */\n  loadResponseInternal(response) {\n    if (\n      response.results.length &&\n      response.results[0].query.responseFormat &&\n      response.results[0].query.responseFormat === ResultType.COMPACT\n    ) {\n      response.results.forEach((result, j) => {\n        const data = [];\n        result.data.dataset.forEach((r) => {\n          const row = {};\n          result.data.members.forEach((m, i) => {\n            row[m] = r[i];\n          });\n          data.push(row);\n        });\n        response.results[j].data = data;\n      });\n    }\n    return new ResultSet(response, {\n      parseDateMeasures: this.parseDateMeasures\n    });\n  }\n\n  load(query, options, callback, responseFormat = ResultType.DEFAULT) {\n    if (responseFormat === ResultType.COMPACT) {\n      if (Array.isArray(query)) {\n        query = query.map((q) => this.patchQueryInternal(q, ResultType.COMPACT));\n      } else {\n        query = this.patchQueryInternal(query, ResultType.COMPACT);\n      }\n    }\n    return this.loadMethod(\n      () => this.request('load', {\n        query,\n        queryType: 'multi',\n      }),\n      this.loadResponseInternal.bind(this),\n      options,\n      callback\n    );\n  }\n\n  subscribe(query, options, callback, responseFormat = ResultType.DEFAULT) {\n    if (responseFormat === ResultType.COMPACT) {\n      if (Array.isArray(query)) {\n        query = query.map((q) => this.patchQueryInternal(q, ResultType.COMPACT));\n      } else {\n        query = this.patchQueryInternal(query, ResultType.COMPACT);\n      }\n    }\n    return this.loadMethod(\n      () => this.request('subscribe', {\n        query,\n        queryType: 'multi',\n      }),\n      this.loadResponseInternal.bind(this),\n      { ...options, subscribe: true },\n      callback\n    );\n  }\n\n  sql(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('sql', { query }),\n      (response) => (Array.isArray(response) ? response.map((body) => new SqlQuery(body)) : new SqlQuery(response)),\n      options,\n      callback\n    );\n  }\n\n  meta(options, callback) {\n    return this.loadMethod(\n      () => this.request('meta'),\n      (body) => new Meta(body),\n      options,\n      callback\n    );\n  }\n\n  dryRun(query, options, callback) {\n    return this.loadMethod(\n      () => this.request('dry-run', { query }),\n      (response) => response,\n      options,\n      callback\n    );\n  }\n}\n\nexport default (apiToken, options) => new CubejsApi(apiToken, options);\n\nexport { CubejsApi, HttpTransport, ResultSet, RequestError };\nexport * from './utils';\n"],"names":["DEFAULT_GRANULARITY","GRANULARITIES","name","undefined","title","removeEmptyQueryFields","_query","query","fromPairs","toPairs","map","key","value","includes","Array","isArray","length","Object","keys","filter","Boolean","validateQuery","filters","f","operator","timeDimensions","td","dateRange","granularity","areQueriesEqual","query1","query2","equals","entries","order","defaultOrder","find","d","dimension","measures","dimensions","defaultHeuristics","newState","oldQuery","options","clone","props","meta","sessionGranularity","state","newQuery","defaultTimeDimension","defaultTimeDimensionNameFor","pivotConfig","shouldApplyHeuristicOrder","chartType","newChartType","isQueryPresent","every","q","movePivotItem","sourceIndex","destinationIndex","sourceAxis","destinationAxis","nextPivotConfig","x","y","id","lastIndex","splice","moveItemInArray","list","result","removed","flattenFilters","reduce","memo","or","and","getQueryMembers","members","Set","forEach","member","add","getOrderMembersFromOrder","orderMembers","ids","indexedOrderMembers","indexBy","prop","nextOrderMembers","memberId","currentOrder","push","has","aliasSeries","values","index","duplicateMeasures","nonNullValues","dayjs","extend","quarterOfYear","internalDayjs","locale","en","weekStart","TIME_SERIES","day","range","by","format","month","snapTo","year","hour","minute","second","week","startOf","quarter","DateRegex","LocalDateRegex","groupByToPairs","keyFn","acc","Map","data","row","set","get","from","unnest","arr","res","subArr","element","dayRange","to","results","start","end","isBefore","isSame","endOf","QUERY_TYPE","REGULAR_QUERY","COMPARE_DATE_RANGE_QUERY","BLENDING_QUERY","ResultSet","loadResponse","queryType","loadResponses","pivotQuery","Error","parseDateMeasures","backwardCompatibleData","drillDownLocator","xValues","yValues","normalizedPivotConfig","normalizePivotConfig","currentIndex","parentFilters","segments","annotation","measureName","drillMembers","split","cubeName","join","dt","toString","drillMembersGrouped","timezone","seriesNames","shortTitle","series","chartPivot","obj","axis","resultIndex","measure","concat","axisValues","delimiter","formatValue","v","getNormalizedPivotConfig","timeDimension","timeDimensionMember","dates","pipe","timeDimensionBackwardCompatibleData","minBy","toDate","maxBy","padToDay","match","pivotImpl","groupByXAxis","axisValuesString","measureValue","fillMissingDates","timeSeries","rows","byXValues","groupBy","xGrouped","yValuesMap","allYValues","measureOnX","yGrouped","yValuesArray","measureFromAxis","pivots","_","mergePivots","joinDateRange","minLengthPivot","current","pivot","validate","test","Date","Number","isNaN","parseFloat","allMeasures","flatten","e","i","a","indexOf","m","isMeasuresPresent","annotations","pluck","mergeDeepLeft","flatMeta","b","schema","extractFields","type","currentItem","children","toColumns","item","path","fields","dimensionValue","dataIndex","trim","otherColumns","mergeAll","uniq","aliasedAxis","dropLast","field","defaultPivotConfig","substituteTimeDimensionMembers","subDim","allIncludedDimensions","allDimensions","dimensionFilter","unshift","SqlQuery","sqlQuery","sql","rawQuery","memberMap","memberArray","operators","string","number","time","Meta","metaResponse","cubes","cubesMap","c","memberType","sort","memberKeys","cube","cubeTitle","memberName","error","memberTypes","resolveMember","ProgressResult","progressResponse","stage","timeElapsed","HttpTransport","authorization","apiUrl","method","headers","credentials","baseRequestId","params","spanCounter","searchParams","URLSearchParams","k","_typeof","JSON","stringify","url","requestMethod","runRequest","fetch","Authorization","body","subscribe","callback","RequestError","message","response","status","mutexCounter","MUTEX_ERROR","ResultType","DEFAULT","COMPACT","mutexPromise","promise","Promise","resolve","reject","CubejsApi","apiToken","transport","pollInterval","updateAuthorizationPromise","request","uuidv4","toResult","mutexValue","mutexKey","mutexObj","requestPromise","updateTransportAuthorization","then","skipAuthorizationUpdate","unsubscribed","checkMutex","requestInstance","unsubscribe","loadImpl","next","subscribeNext","setTimeout","continueWait","wait","text","parse","progressCallback","token","responseFormat","j","dataset","r","patchQueryInternal","loadMethod","loadResponseInternal","bind"],"mappings":"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"}